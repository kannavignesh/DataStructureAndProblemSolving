Program1: Find first and last position of element in sorted array 
Given an array of integers nums sorted in non-decreasing order, 
find the starting and ending position of a given target value. 
If target is not found in the array, return [-1, -1]. 

Example 1: Input: nums = {5,7,7,8,8,10}, target = 8 
Output: {3,4} 

Example 2: Input: nums = {5,7,7,8,8,10}, target = 6 
Output: [-1,-1] 

Example 3: Input: nums = [], target = 0 
Output: [-1,-1] 

Example4: Input: nums = {5,6,7,7,8,8,10}, target = 6 
Output: [1,1] 

Data Set
 Positive- nums = {5,7,7,8,8,10}, target = 8 
 Negative- nums = {5,7,7,8,8,10}, target = 6
 Edge- nums = {5,6,7,7,8,8,10}, target = 6
code:
1.Declare an array list int positionOfTarget
2.Store the array of int as nums, int target, int negative= -1 and ArrayList<Integer> position
2. Iterate with for loop through the integer array to i=0, i<array.length, i++
3. if (nums[i] == target && nums[i+1] == target}
    position.add(i);
    position.add(i+1);
    return position
4. Iterate with for loop through the integer array to j=0, j<array.length, j++
5. if (nums[j] == target)
    position.add(j);
	position.add(j);
    return position;
6. To combat negative data set pass 
   position.add(negative);
   position.add(negative);
   return position
	 


